#include <stdio.h>

void insertion(int arr[], int *size);
void deletion(int arr[], int *size);
void linearsearch(int arr[], int *size);
void binarysearch(int arr[], int *size);

int main() {
    int arr[100], choice, size = 6;

    for (int i = 0; i < size; i++) {
        printf("enter the numbers in the array : ");
        scanf("%d", &arr[i]);
    }

    for (int i = 0; i < size; i++) {
        printf(" %d ", arr[i]);
    }

    printf("\nMENU:\n1.\t Insertion\n2.\t Deletion\n3.\t Linear search\n4.\t Binary search");
    printf("\nEnter Choice : ");
    scanf("%d", &choice);

    switch (choice) {
        case 1:
            insertion(arr, &size);
            break;
        case 2:
            deletion(arr, &size);
            break;
        case 3:
            linearsearch(arr, &size);
            break;
        case 4:
            binarysearch(arr, &size);
            break;
        default:
            printf("wrong choice");
    }

    return 0;
}

void insertion(int arr[], int *size) {
    int loc, val;
    printf(" \n before insertion: ");
    for (int i = 0; i < *size; i++) {
        printf(" %d ", arr[i]);
    }

    printf("\nEnter the location for insertion (0 to %d): ", *size);
    scanf("%d", &loc);
    printf("Enter the value you want to enter: ");
    scanf("%d", &val);

    for (int i = *size; i > loc; i--) {
        arr[i] = arr[i - 1];
    }
    arr[loc] = val;
    (*size)++;

    printf(" \n after insertion: ");
    for (int i = 0; i < *size; i++) {
        printf(" %d ", arr[i]);
    }
    printf("\n");
}

void deletion(int arr[], int *size) {
    int val, found = 0, i;
    printf("\nArray: ");
    for (i = 0; i < *size; i++) {
        printf(" %d ", arr[i]);
    }

    printf("\nEnter value to delete: ");
    scanf("%d", &val);

    for (i = 0; i < *size; i++) {
        if (arr[i] == val) {
            found = 1;
            break;
        }
    }

    if (found) {
        for (int j = i; j < *size - 1; j++) {
            arr[j] = arr[j + 1];
        }
        (*size)--;
        printf("After deletion: ");
        for (i = 0; i < *size; i++) {
            printf(" %d ", arr[i]);
        }
    } else {
        printf("Value not found.\n");
    }
    printf("\n");
}

void linearsearch(int arr[], int *size) {
    int val, found = 0;
    printf("\nEnter value to search: ");
    scanf("%d", &val);
    for (int i = 0; i < *size; i++) {
        if (arr[i] == val) {
            printf("Value found at index %d\n", i);
            found = 1;
            break;
        }
    }
    if (!found) {
        printf("Value not found\n");
    }
}

void binarysearch(int arr[], int *size) {
    int low = 0, high = *size - 1, mid, val;
    printf("\nEnter value to search: ");
    scanf("%d", &val);

    for (int i = 0; i < *size - 1; i++) {
        for (int j = i + 1; j < *size; j++) {
            if (arr[i] > arr[j]) {
                int tmp = arr[i];
                arr[i] = arr[j];
                arr[j] = tmp;
            }
        }
    }

    while (low <= high) {
        mid = (low + high) / 2;
        if (arr[mid] == val) {
            printf("Value found at index %d\n", mid);
            return;
        } else if (arr[mid] < val) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }
    printf("Value not found\n");
}
